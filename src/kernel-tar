#!/bin/bash
#
# RuckusRD - a super awesome, yet simple, mkinitrd replacement
#
# Copyright 2018-2022 Michael D Labriola <veggiemike@sourceruckus.org>
#
# Licensed under the GPLv3. See the file COPYING for details. 
#
# This script is a utility for creating a self-extracting installer for a built
# Linux kernel.  First run `kernel-builder`, then run this.
#
export SRP_ROOT=$PWD/FOO

# detect when we're running out of a source tree and avoid PATH in that case
if [ -f $(dirname $0)/linuxrc ]; then
    extractenator=$(realpath $(dirname $0))/extractenator
else
    extractenator=extractenator
fi

# figure out VERSION, which might be a stable .y version w/ a symlink
for x in $SRP_ROOT/lib/modules/*; do
    if [ -h $x ]; then
        VERSION=$(readlink $x)
        VERSION_NAME=$(basename $x)
        break
    else
        VERSION=$(basename $x)
    fi
done

if [ -z "$VERSION" ]; then
    echo "ERROR: can't detect VERSION; malformed installer"
   exit 1
fi

if [ "$VERSION_NAME" != "test" ]; then
    filename=$PWD/kernel-installer-$VERSION.sh
else
    filename=$PWD/kernel-installer-$VERSION_NAME.sh
fi

usage()
{
    if [ -n "$*" ]; then
        echo ERROR: $*
        echo
    fi
    echo "kernel-tar - a self-extracting kernel installer creator"
    echo "Copyright (C) 2018-2022 Michael D Labriola <veggiemike@sourceruckus.org>"
    echo
    echo "usage: `basename $0` OPTIONS [-- EXTRACTENATOR_OPTIONS]"
    echo
    echo "kernel-tar uses extractenator to create a self-extracting kernel installer using"
    echo "the build output of kernel-builder (the FOO directory).  Extractenator is"
    echo "provided with its required --filename (kernel-installer-x.y.z.sh), --script (a"
    echo "generated installation script), and payload (the FOO directory).  Other"
    echo "extractenator options can be passed into the child process by appending them to"
    echo "the command line after a '--' (used to indicate end of option parsing).  See"
    echo "extractenator --help for more info."
    echo
    echo "Once created, the installer is run by simply executing it.  The installer script"
    echo "cleans /lib/modules and /usr/src/headers, then copies the payload (initially"
    echo "extracted to current working directory) into /."
}


# call getopt
#
# NOTE: This handles spacing out arguments correctly for the case statement
#       below and checks for unknown flags.  Required flags are checked for
#       below.
#
# NOTE: The set -- command causes the resulting output of getopt to replace the
#       current positional arguments (e.g, $1, $2).
#
__opts=$(getopt -un $(basename $0) \
    -o h \
    --long help -- $@)
if [ $? != 0 ]; then
    echo
    usage
    exit 1
fi
set -- $__opts

# parse the new positional arguments
while true; do
    case "$1" in
	--)
            # done parsing
            shift
            break
            ;;
	*)
            usage
            exit 1
            ;;
    esac
done


# setup a tmpdir
tmpdir=`mktemp -dt \`basename $0\`-XXXX`

echo VERSION: $VERSION
echo VERSION_NAME: $VERSION_NAME
echo tmpdir: $tmpdir
echo filename: $filename

# create the installer script
cat > $tmpdir/installer <<EOF
echo VERSION: $VERSION
echo VERSION_NAME: $VERSION_NAME

if [ -n "\$*" ]; then
    echo "usage: install.sh"
    exit 1
fi

echo -n "extracting archive... "
cp -a FOO/* / && echo DONE || { echo FAIL; exit 1; }

echo
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo "!!                                                                           !!"
echo "!! don't forget to update your bootloader (e.g., grub, extlinux).            !!"
echo "!!                                                                           !!"
echo "!! don't forget to provide firmware to initrd (e.g., use fwdev w/ fw.sqsh or !!"
echo "!! append firmware to initrd, both can be created with firmwarenator).       !!"
echo "!!                                                                           !!"
echo "!! don't forget to provide microcode to initrd (e.g., prepend ucode.img to   !!"
echo "!! initrd, it can be created with microcodenator).                           !!"
echo "!!                                                                           !!"
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo

EOF

# NOTE: $* is so we can pass additional arguments to extractenator (e.g.,
#       --comp).
#
# NOTE: We exclude lib and usr because initrd installs thost at boot now.
#
$extractenator -f $filename -e FOO/lib -e FOO/usr -s $tmpdir/installer FOO $* || exit 1

rm -rf $tmpdir
exit 0
